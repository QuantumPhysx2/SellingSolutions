@model IEnumerable<SellingSolutions.Models.Product>
@using Microsoft.AspNetCore.Identity
@using SellingSolutions.Areas.Identity.Data
@inject SignInManager<SellingSolutionsUser> SignInManager
@inject UserManager<SellingSolutionsUser> UserManager

@{
    ViewData["Title"] = "Products";
}

<h2>Products</h2>
@if (SignInManager.IsSignedIn(User))
{
<p>
    <a asp-action="Create" class="btn btn-default">Create New</a>
</p>
}

<form asp-action="Index" method="post">
    <p>
        Category: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>


<table class="table sortable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seller)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            if (item.Quantity <= 0)
            {
                <tr class="out-of-stock">
                    <td>
                        <img alt="@Html.DisplayFor(modelItem => item.Name)" src="@Html.DisplayFor(modelItem => item.Image)" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seller)
                    </td>
                    <td>
                        Check back later!
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        <img alt="@Html.DisplayFor(modelItem => item.Name)" src="@Html.DisplayFor(modelItem => item.Image)" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seller)
                    </td>
                    @if (SignInManager.IsSignedIn(User) && item.Seller == User.Identity.Name  || User.IsInRole("Admin"))
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-default">View Item</a> |
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-default">View Item</a>
                        </td>
                    }
                </tr>
            }
        }
    </tbody>
</table>